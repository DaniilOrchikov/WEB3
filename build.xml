<?xml version="1.0"?>
<project name="WEB3" default="build" xmlns:ivy="antlib:org.apache.ivy.ant">
    <property file="build.properties"/>
    <target name="init-ivy">
        <!-- Убедитесь в наличии Ivy -->
        <available classname="org.apache.ivy.Main" property="ivy.installed"/>
        <mkdir dir="${user.home}/.ant/lib"/>
        <get dest="${user.home}/.ant/lib/ivy.jar"
             src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/2.5.0/ivy-2.5.0.jar"/>
        <!-- Загружаем antcontrib, если он не установлен. Замените на нужную вам версию. -->
        <get dest="${user.home}/.ant/lib/ant-contrib.jar"
             src="https://repo1.maven.org/maven2/ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar"/>
        <fail unless="ivy.installed" message="Ivy не установлен в ANT_HOME/lib и не может быть загружен"/>
    </target>

    <taskdef name="ivy" classname="org.apache.ivy.ant.IvyTask" classpath="${lib}/ivy-2.5.2.jar"/>

    <target name="init">
        <mkdir dir="${build}"/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${build.tests}"/>
        <mkdir dir="${junit.report}"/>
    </target>

    <target name="resolve" depends="init, init-ivy">
        <ivy:retrieve/>
    </target>

    <path id="classpath">
        <fileset dir="lib" includes="*.jar"/>
    </path>
    <path id="classpath-test">
        <fileset dir="lib" includes="*.jar"/>
        <pathelement location="${classes}"/>
        <pathelement location="${build.tests}"/>
    </path>

    <target name="compile" depends="clean, init">
        <javac srcdir="${src}" destdir="${classes}" includeantruntime="false">
            <classpath>
                <fileset dir="${lib}" includes="**/*.jar"/>
            </classpath>
        </javac>
    </target>
    <target name="clean">
        <delete dir="${build}"/>
    </target>
    <target name="build" depends="compile">
        <copy todir="${build}">
            <fileset dir="${web}"/>
        </copy>
        <copy todir="${build.lib}">
            <fileset dir="${lib}"/>
        </copy>
        <copy todir="${classes}">
            <fileset dir="${resources}"/>
        </copy>
        <jar destfile="$${build}/${ant.project.name}.jar"
             basedir="${classes}"
             compress="false"
             index="true">
        </jar>
        <war destfile="${build}/${ant.project.name}.war" webxml="${build.web.xml}">
            <fileset dir="${build}"/>
        </war>
    </target>
    <target name="compile-test" depends="init">
        <javac destdir="${build.tests}" srcdir="${test}" includeantruntime="false">
            <classpath refid="classpath-test"/>
        </javac>
    </target>
    <target name="test" depends="compile-test">
        <junit printsummary="true" haltonfailure="yes" haltonerror="yes">
            <classpath refid="classpath"/>
            <classpath location="${build.tests}"/>
            <test name="com.example.test.AreaResultCheckerTest"/>
<!--            <batchtest fork="yes" todir="${junit.report}">-->
<!--                <formatter type="plain"/>-->
<!--                <fileset dir="${test}" includes="*.java"/>-->
<!--            </batchtest>-->
        </junit>
    </target>
</project>